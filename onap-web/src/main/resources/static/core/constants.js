(function() {
  'use strict';
  var serverUrl = window.location.href.split('#')[0];
  var API_BASE = serverUrl;

  var ERROR_MESSAGES = {
        API_NOT_AVAILABLE: 						'A network connection error has occurred.',
        FILE_UPLOAD_ERROR: 						'Upload progress: Save to database failure.',
        RESOURCES_LOAD_FAILURE: 				'An error occurred during resource availability.',
        SEARCH_ERROR: 							'An error occurred during search.',
        TYPE_ERROR: 							'An invalid format was entered.',
        CASE_RETRIEVAL_ERROR: 					'An error occurred during case retrieval.',
        WORK_RETRIEVAL_ERROR: 					'An error occurred during work retrieval.',
        LOAN_LOAD_ERROR: 						'An error occurred during loan retrieval.',
        INVALID_LOGIN: 							'Invalid Login.  Please try again.',
        REFERENCE_CODE_API_ERROR: 				'There was an error connecting to the reference code API.',
        LAND_TYPE_RETRIEVAL_ERROR:  	  		'An error occurred while retrieving Land Types.',
        APPRAISAL_METHOD_RETRIEVAL_ERROR: 		'An error occurred while retrieving Appraisal Methods.',
        CONSTRUCTION_CODE_RETRIEVAL_ERROR:		'An error occurred while retrieving Construction Code.',
        APPRAISAL_TYPE_RETRIEVAL_ERROR:			'An error occurred while retrieving Appraisal Types.',
        GETLOANOFFICER_RETRIEVAL_ERROR:			'An error occurred while retrieving Loan Officer .',
        UNDERWRITER_RETRIEVAL_ERROR:			'An error occurred while retrieving Loan Underwriter .',
        APPRAISAL_LICENSE_TYPE_RETRIEVAL_ERROR:	'An error occurred while retrieving Appraiser License Types.',
        STATES_RETRIEVAL_ERROR:						'An error occurred while retrieving States.',
        MORTAGE_RETRIEVAL_ERROR:'An error occurred while retrieving Manage Mortgage Limits Details.',
        RECONCILIATION_RETRIEVAL_ERROR:			'An error occurred while saving the Reconciliation data.',
        NOTES_SAVING_ERROR:						'An error occurred while saving the nOTES data.',
        RESERVE_FUNDS_PROCESS_ERROR:			'An error occurred while reserving funds.',
        IS_COHORT_CASE_RETRIEVAL_ERROR:		'An error occurred while retrieving Cohort Details.',
        EOF_ERROR:		'An error occurred while retrieving EOF Details.',
        _CASE_CANCEL_RETRIEVAL_ERROR:		'An error occurred while retrieving case Details.',
        CANOT_CANCEL_CASE_ERROR: 'Case Cannot be Cancelled at this time - Funds have been Reserved for this Loan.',
		CANOT_CANCEL_CASE_ERROR_OLGAdmin:'Funds reserved may only be cancelled until the case has been endrosed.',
        CASE_ALREADY_CANCEL__ERROR: 'Case is already cancelled.',
        SPONSERBROKER_RETRIEVAL_ERROR: 'An error occurred while retrieving sponserBrokers.',
        LOAN_OFFICERS_RETRIEVAL_ERROR:			'An error occurred while retrieving Loan Officers.',
        UNDERWITER_RETRIEVAL_ERROR:				'An error occurred while retrieving Underwriters',
        SPONSOR_BROKERS_RETRIEVAL_ERROR:		'An error occurred while retrieving Sponsor Brokers',
        PERSON_FOR_CASE_RETRIEVAL_ERROR:		'An error occurred while retrieving Person for Case',
        BORROWERS_FOR_CASE_RETRIEVAL_ERROR:		'An error occurred while retrieving Borrowers for Case',
        NOTES_RETRIEVAL_ERROR:					'An error occurred while retrieving Notes',
        BORROWER_TYPE_RETRIEVAL_ERROR:			'An error occurred while retrieving Borrower Types',
        LENDER_DASHBOARD_RETRIEVAL_ERROR:			'An error occurred while retrieving Case Details',
        LENDER_CASE_RETRIEVAL_ERROR:			'An error occurred while retrieving Lender Case Details',
        B_CASE_REVIEW_SAVE_ERROR:			'An error occurred while Saving Borrower Details',
        TRIBE_RETRIEVAL_ERROR:					'An error occurred while retrieving Tribes',
        IHA_TDHE_RETRIEVAL_ERROR:				'An error occurred while retrieving IHA-TDHE',
        PROPERTY_FOR_CASE_RETRIEVAL_ERROR:		'An error occurred while retrieving Property for Case',
        GENERIC_FORM_ERROR: 					'Your form contains errors.',
        MONTH_YEAR_INVALID:						'Month/Year Completed must be entered together and cannot be later than the current month and year.',
        APPRAISAL_RECEIVED_DATE_ERROR:			'Appraisal Received Date cannot be later than today.',
        CONTRACT_DATE_ERROR:					'Contract Date cannot be later than today.',
        REMAINING_ECONOMIC_LIFE_ERROR:			'Remaining Economic Life cannot be less than Loan Term of :num years',
        SAVE_ERROR_PROPERTY_DATA:				'An error occurred while saving the property data.',
        SAVE_ERROR_SITE_DATA:					'An error occurred while saving the Site data.',
        SAVE_ERROR_PHYSICAL_CHAR_DATA:			'An error occurred while saving the physical characteristics data.',
        APPRAISAL_DATE_INVALID:					'Date of Appraisal cannot be later than today.',
        STATE_REQUIRED_ERROR:					'State is required.',
        APPRAISAL_LICENSE_TYPE_REQUIRED_ERROR:	'Appraiser License Type is required.',
        LICENSE_NUMBER_REQUIRED:				'License Number is required.',
        FIRST_NAME_REQUIRED:					'First Name is required.',
        MI_NAME_REQUIRED:						'MI must contain only Alphabets.',
        LENDING_INST_REQUIRED:   				'Lending Institution is required',
        DG_APPROVED_REQUIRED:					 'DG Approval Date is required.',
        DG_NUMBER_REQUIRED: 					'DG Number is required.',
        DG_TRAINER_REQUIRED: 					'DG Trainer is required.',
        STATUS_REQUIRED: 						'Status is required.',
        EMAILS_REQUIRED: 						'Enter Valid Underwriter Email',
        EMAILVALID_REQUIRED: 						'Underwriter Email is required',
        UNDERWRTR_PHNE_REQUIRED:				 'Underwriter Phone is required.',
        UNDERWRTR_PHNE_VALID:				  'Enter Valid Phone Number with 10 Digits',
        LAST_NAME_REQUIRED:						'Last Name is required.',
        BROKER_NAME_REQUIRED:					'Broker Name Is Required',
        TIN_REQUIRED:							'TIN is required',
        INVALID_TIN_NUMBER:						'Enter Valid TIN (Numbers Only)',
        BORROWER_TYPE_REQUIRED:					'Borrower Type is required',
        SSN_REQUIRED:							'SSN is required',
        SSN_INVALID:							'Please Enter Valid SSN (Numbers Only)',
        TRIBAL_AFFILIATION_REQUIRED:			'Tribal Affiliation is required',
        DOB_REQUIRED:							'Date of Birth is required',
        START_DATE_REQUIRED:					'Start Date is required',
        START_LT_END_REQUIRED:					'Start Date should be less than End Date',
        END_GT_START_REQUIRED:					'End Date should be greater than Start Date',
        END_DATE_REQUIRED:						'End Date is required',
        MINIMUM_END_DATE_REQUIRED:				'Maximum 5 days only allowed.',
        SUBSDY_ONLY_1_ERROR: 					'Only one record can be added at a time',
        ORGANIZATION_REQUIRED: 					'Organization is required',
        LAND_STATUS_REQUIRED:					'Land Status is required',
        STATE_REQUIRED:							'State is required',
        ZIP_CODE_INVALID:						'All zeroes is not a valid ZIP code',
        ZIP_CODE_LENGTH_ERROR:					'Enter Valid Zipcode (Max. 5 Numbers Only)',
        CITY_REQUIRED:							'City is required',
        CITY_VALIDATION:						'City must contain only Alphabets',
        ADDRESS_REQUIRED:						'Address is required',
        COUNTY_REQUIRED:						'County is required',
        NUM_UNITS_REQUIRED:						'No of Units is required',
        PROPERTY_LOT_REQUIRED:					'Lot is required',
        ALL_FIELDS_REQUIRED:					'All Fields Are Required',
        SUBSIDY_COHORT_ERROR:					'Please enter values for Rates greater than ZERO/Four digit Cohort Year',
        LOAN_TERM_REQUIRED:						'Loan Term is required',
        LOAN_MONTHS_EXCEED_ERROR:				'Loan Term should be greater than 0 and not exceed 360 months.',
        LOAN_PURPOSE_REQUIRED:					'Purpose of Loan is required',
        PRIOR_CASE_REQUIRED:					'Status of Prior Case is required',
        BASE_LOAN_AMOUNT_INVALID:				'Base Loan Amount (Numbers with two decimal format) is required',
        BASE_LOAN_AMOUNT_REQUIRED:				'Base Loan Amount is required',
        MAX_BASE_LOAN_AMOUNT_ERROR:				'Base Loan Amount value cannot exceed :num',
        LG_FEE_INVALID:							'Please Enter Valid loanGuaranteeFee(Numbers with two decimal format)',
        LOAN_TYPE_REQUIRED:						'Type of Loan is required',
        CASE_NUMBER_INVALID:					'Please enter a Case number in the following format: [###-######].',
        CASE_INSTITUTION_ERROR:					'Case number is not associated with your lending institution.',
        CASE_NOT_FOUND:							'Case not found.',
        INFO_INVALID:						'Password must be of 8 characters (1 uppercase, 1 number and 1 special character)',
        CONFIRM_INFO_ERROR:					'Password Confirmation Unsuccessful',
        OLD_INFO_INCORRECT:					'Old Password is incorrect. Please Enter correct Password',
        CHANGE_INFO_ERROR:					'Error occured while changing Password, contact Administrator',
        CHANGE_INFO_RESPONSE_ERROR:					'Error occured while sending changing Password',
        LENDER_NAME_REQUIRED:					'Lender Name Is Required',
        LOAN_OFFICER_REQUIRED:					'Loan Officer Is Required',
        UNDERWRITER_REQUIRED:					'Loan Underwriter Is Required',
        SINGLE_REQUIRED:					'Single Is Required',
        DUPLEX_REQUIRED:					'Duplex Is Required',
        TRIPLEX_REQUIRED:					'Triplex Is Required',
        QUADPLEX_REQUIRED:					'Quadplex Is Required',
        BIA_RESERVATION_CODE_REQUIRED:			'BIA Reservation Code is required',
        CONTRACT_NUM_REQUIRED:					'Contract No is required',
        BIA_TRACKING_NUM_REQUIRED:				'BIA Track No is required',
        NAME_TRIBE_LAND_JURISDICTION_ERROR:		'Name of Tribe with Land Jurisdiction is required',
        APPLICATION_RECEIVED_BY_REQUIRED:		'Application Received By is required',
        LG_FEE_FINANCED_REQUIRED:				'LG Fee Financed is required',
        LG_FEE_PAID_CASH_REQUIRED:				'LG Fee Paid in Cash is required',
        LG_FEE_FINANCED_AND_CASH_REQUIRED:   	'LG Fee Paid in Cash or LG Fee Financed is required',
        LG_FEE_FINANCED_CASH_INVALID:			'LG Fee Financed + LG Fee Paid in Cash cannot exceed LG Fee.',
        SALES_PRICE_REQUIRED:					'Sales Price  is required',
        COBORROWER_MORETHAN_FIVE_ERROR:			"More than 5 co-borrowers can't be added",
        PRIBORROWER_NO_TRIBAL:					"Individual Primary Borrowers must have a Tribal Affiliation",
        APPRAISED_VALUE_REQUIRED:				'Appraised Value is required',
        ORIG_PRINCIPAL_BALANCE_REQUIRED:		'Original Principal Balance is required',
        TAXES_REQUIRED:							'Taxes is required',
        BASES_FOR_MORTGAGE_CALC_REQUIRED:		'Basis for Mortgage Calculation is required',
        INTEREST_RATE_REQUIRED:					'Interest Rate is required',
        HAZARD_FLOOD_REQUIRED:					'Hazard & Flood is required',
        PROJECTED_DATE_REQUIRED:				'Projected Date is required',
        PROJECTED_DATE_MAX_ERROR:				'Projected closing date cannot exceed 120 days beyond the case registration date',
        PROJECTED_DATE_EXCEEDS_EXP:				'The Projected Closing Date cannot exceed the date funds expire. Please adjust the Projected Closing Date or contact the Office of Loan Guarantee to request an extension to the reservation of funds date.',
        ACTUAL_DATE_EXCEEDS_EXP:				'The Actual Closing Date cannot exceed the date funds expire.  Please contact the Office of Loan Guarantee to request an extension to the reservation of funds date.',
        RESERVATION_OF_FUNDS_EXCEED_ERROR:		'Reservation of funds cannot exceed Base Loan Amount + LG Fee financed',
        SELLER_CONTRIBUTION_ERROR:				'Seller Contribution % may not be greater than 6%. Seller Contribution Amount and/or Base Loan Amount needs to be adjusted.',
        INTEREST_RATE_MINIMUM:					'Interest rate must be greater than 0.',
        MAX_BASE_LOAN_AMOUNT_RETRIEVAL_ERROR: 	'An error occurred while retrieving the maximum base loan amount.',
        LTV_MAX_ERROR:							'Loan-to-value may not exceed 85% when the loan purpose is credit qualifying with cash out.',
        DEBT_TO_INCOME_ERROR:					'Total debt to income ratio should not exceed 42%. Please check the values.',
        NON_APPROVED_UNDERWRITER_ERROR:			'The system does not recognize your name as an approved DG Underwriter. Please contact HUD\'s Office of Loan Guarantee to resolve this issue.',
        INVALID_UNDERWRITER_ERROR:				'You must be in the list of underwriters.',
        DOCUMENT_UPLOAD_ERROR:					'An error occurred while uploading document.',
        DOCUMENTS_MISSING_ERROR:				'One or more documents is missing from the list.',
        DOCUMENT_RETRIEVAL_ERROR:				'An error occurred while retrieving document.',
        CASE_BINDER_INCOMPLETE_ERROR:			'Case binder is missing 1 or more required sets of files for submission. Please upload the required missing documentation.',
        SUBMIT_DOCUMENTS_ERROR:					'An error occurred while submitting documents.',
        MAX_MORTGAGE_LIMIT_RETRIEVAL_ERROR:		'An error occurred while retrieving maximum mortgage limit.',
        ROF_MODIFICATIONS_RETRIEVAL_ERROR:		'An error occurred while retrieving Reservation of Funds modifications.',
        CASE_ESCALATION_SUPERVISOR_ERROR:		'An error occurred while escalating the case.',
        SUSPEND_CASE_ERROR:						'An error occurred while suspending the case.',
        CASE_ENDORSEMENT_ROF_GT_LG:				'This loan cannot be endorsed. The amount of funds reserved for this loan exceeds the required amount.  Please contact the Lender to process an adjustment.',
        CASE_ENDORSEMENT_ROF_LT_LG:				'This loan cannot be endorsed. The amount of funds reserved is insufficient to cover this loan. Please contact the Lender to process an adjustment.',
        ENDORSE_ROF_LT_LG:						"The amount of funds reserved for this loan is insufficient. Please request an increase to the amount of funds reserved to cover the loan amount.",
        ENDORSE_ROF_GT_LG:						'The amount of funds reserved exceeds the loan amount. Please adjust the amount of funds reserved to equal the loan amount.'
  };
  
  var SUCCESS_MESSAGES = {
		PROPERTY_DATA_SAVED: 					'Property data was successfully saved.',
		NEIGHBORHOOD_DATA_SAVED:				'Neighborhood data was saved successfully.',
		SITE_DATA_SAVED: 						'Site data was successfully saved.',
		PHYSICAL_CHAR_DATA_SAVED:				'Physical characteristics data was successfully saved.',
		PRIOR_SALE_DATA_SAVED:					'Prior Sales data was saved successfully.',
		RECONCILIATION_DATA_SAVED:				'Reconciliation data was successfully saved.',
		INFO_UPDATED:							'Password updated successfully',
		SAVED_SUCCESSFULLY: 					'Successfully saved',
		UPDATED_SUCCESSFULLY: 					'Successfully Updated',
		SIGNED_SUCCESSFULLY:					'Successfully signed',
		CASE_CANCEL_SUCCESS:					'Case Cancelled Successfully',
		ONE_RECORD_FOUND:						'1 record found.',
		FILE_UPLOADED:							'File was successfully uploaded.',
		DOCUMENTS_SUBMITTED:					'Your documents have been submitted',
		CASE_ESCALATION_SUPERVISOR:				'Successfully Escalated to Supervisor',
		CASE_SUSPENDED:							'Successfully suspended',
		CASE_ENDORSED:							'Successfully endorsed'
  };
  
  var INFO_MESSAGES = {
		  CACHE_CLEAR_SEARCH_REDO: 					'Clearing cache and redoing search.',
		  CACHE_CLEAR:			   					'Cache cleared.',
		  ENTER_NINFO:		   						'Enter New Password',
		  ENTER_INFO_CINFO:  						'Enter Confirm Password',
		  ENTER_INFO_OINFO:  						'Enter Old Password',
		  APPRAISAL_LOGGING_WARNING:				'A case was found, but it is ineligible for appraisal logging',
	      RESUBMIT_DOC_EXISTS_MESSAGE: 			'You are about to overwrite the existing file for this category. Are you sure you want to proceed?'
  }
  
  var REFERENCE_CODES = {
		  LAND_STATUS: 				'LAND STATUS',
		  PRIOR_SALE_TYPE: 			'PRIOR SALE TYPE',
		  APPRAISAL_METHOD: 		'APPRAISAL METHOD',
		  BUILDING_STRUCTURE:		'BUILDING STRUCTURE',
		  APPRAISAL_TYPE:			'APPRAISAL TYPE',
		  STATE_PREFIX:				'STATE PREFIX',
		  APPRAISER_LICENSE_TYPE:	'APPRAISER LICENSE TYPE',
		  BORROWER_TYPE:			'BORROWER TYPE',
		  TRIBE:					'TRIBE',
		  IHA_TDHE:					'IHA-TDHE'
  }
	    
    var apiEndpoints = {
		GET_CASE_INFO:				API_BASE.concat("case/search/:caseNumber"),
    	GET_CASE:		 			API_BASE.concat("case/search/:caseId/lender/:lenderId"),
    	GET_CASES_OLG_SUPERVISOR:	API_BASE.concat("case/supervisor"),
    	GET_CASES_OLG_ENDORSER: 	API_BASE.concat("case/endorser"),
    	GET_CASES_OLG_CASES_DASHBOARD:	API_BASE.concat("olgDashboard/cases"),
    	GET_CASE_SUMMARY:			API_BASE.concat("case/summary/:caseNumber"),
    	GET_CASE_DETAILS: 			API_BASE.concat("caseDetail/:caseId"),
    	GET_CASE_PROPERTY:          API_BASE.concat("appraisalLogging/property/:caseNumber/:loanId"),
    	SAVE_PROPERTY:				API_BASE.concat("appraisalLogging/property/:caseNumber"),
    	GET_SITE_AREA: 				API_BASE.concat("case/site/:caseNumber"),
    	SAVE_SITE_AREA: 			API_BASE.concat("case/site"),
		GET_CASE_NEIGHBORHOOD:		API_BASE.concat("case/neighborhood/:caseNumber"),
		SAVE_NEIGHBORHOOD:			API_BASE.concat("case/neighborhood/"),
		GET_RECONCILIATION: 		API_BASE.concat("appraisalLogging/reconciliationInfo/:loanId"),
		SAVE_RECONCILIATION:		API_BASE.concat("appraisalLogging/reconciliation/:loanId"),
		GET_PHYSICAL_CHAR:			API_BASE.concat("appraisalLogging/physicalCharacteristicsInfo/:loanId"),
		SAVE_PHYSICAL_CHAR:			API_BASE.concat("appraisalLogging/physicalCharacteristics/:loanId"),
		GET_PRIOR_SALE:				API_BASE.concat("case/priorsale/:caseNumber"),
		SAVE_PRIOR_SALE:			API_BASE.concat("case/priorsale/"),
		GET_LOAN_FOR_CASE:			API_BASE.concat("getLoanForCase/:caseId"),
		GET_PROPERTY_FOR_CASE:		API_BASE.concat("getPropertyForCase/:caseId"),
	    GET_PERSON_FOR_CASE:		API_BASE.concat("getPersonForCase/:caseId"),
	    GET_UNDERWRITERS:			API_BASE.concat("getUndrWrtrs"),
		GET_BORROWER_FUND_TO_CLOSE: API_BASE.concat("case/fundstoclose/:caseNumber"),
		SAVE_BORROWER_FUND_TO_CLOSE:API_BASE.concat("case/fundstoclose/"),
		GET_BORROWERS_FOR_CASE:		API_BASE.concat("getBorrowersForCase/:caseId"),
		GET_MAX_MORTGAGE_LIMIT: 	API_BASE.concat("getMaxMortgageLmtAmt/stcd/:stateCd/cntynm/:countyNm/unit/:nbrUnits"),
    	GET_CONSTRUCTION_CODE:		API_BASE.concat("appraisalLogging/property/constructionCode/:caseNumber"),
	    GET_STATE_METADATA: 		API_BASE.concat("case/referenceData"),
	    GET_REFERENCE_CODES:		API_BASE.concat("case/referenceCodes/:code"),
	    GET_REFERENCE_GROUP:		API_BASE.concat("case/referenceCodes/group/:code"),
	    GET_REFERENCE_CODE_OBJECT:	API_BASE.concat("case/referenceCodes/:type/:code"),
	    GET_REFERENCE_CODE_BY_TYPE: API_BASE.concat("case/referenceCode/:type/:code"),
        GET_CASE_BORROWER_DETAILS:	API_BASE.concat("caseDetail/:caseId/borrower"),
		RESERVE_FUNDS:				API_BASE.concat("loan/reservationOfFunds/:loanId"),
		RETRIEVE_PDF:				API_BASE.concat("case/existingDocument"),
		GET_DOCUMENT_LIST:			API_BASE.concat("case/documentList/:loanId"),
	    GET_LOAN_CALCULATIONS:		API_BASE.concat("loan/loanCalculationsInfo/:loanId"),
	    SAVE_LOAN_CALCULATIONS:		API_BASE.concat("loan/loanCalculations/:loanId"),
	    GET_LOAN_OFFICERS:			API_BASE.concat("getLoanOfficers"),
	    GET_WORKSHEET:	 			API_BASE.concat("caseDetail/:caseId/financialWorksheet"),
	    GET_FUNDS_TO_CLOSE: 		API_BASE.concat("caseDetail/:caseId/fundsToClose"),
	    GET_SPONSOR_BROKERS:		API_BASE.concat("sponserBrokers/:lenderId"),
	    GET_COUNTIES_FOR_STATE:		API_BASE.concat("getCountiesForState/:stateCd"),
        LOG: 						API_BASE.concat("log/"),
        LOGIN:	 					API_BASE.concat("login"),
    	LOGOUT:						API_BASE.concat("logout"),
    	RESERVE_FUND_ESIGN:			API_BASE.concat("case/document"),
    	VERIFY_UNDERWRITER:			API_BASE.concat("lender/underwriter"),
    	UPDATE_CASE:				API_BASE.concat("case/review/update"),
    	RETRIEVE_FULL_NAME:			API_BASE.concat("user/name/:username"),
    	UPLOAD_DOCUMENT:			API_BASE.concat("case/uploadDocument/:loanId"),
    	SUBMIT_DOCUMENTS:			API_BASE.concat("case/submitDocuments/:loanId"),
    	GET_ROF_MODIFICATIONS:		API_BASE.concat("case/cohort/mods/:loanId"),
    	GET_CLOSING_DATES:			API_BASE.concat("case/dates/:loanId"),
    	SUBMIT_ROF_MODIFICATION:	API_BASE.concat("case/cohort/mod"),
		ASSIGN_CASE_OLG_REVIEWER:	API_BASE.concat("case/assignment"),
		START_REVIEW:				API_BASE.concat("case/startReview"),
		INVOKE_REVIEW_METHOD:		API_BASE.concat("case/review"),
		ENDORSEMENT_REVIEW_DOCS:	API_BASE.concat("getLoanEndorsementReview/:loanId"),
		ENDORSEMENT_REVIEW_SAVE:	API_BASE.concat("storeLoanEndorsementReview/:loanId")
    };

    var settings = {
    	IDLE_TIMEOUT: 30,
    	IDLE_TIME: 10*60
    };
    
    var roles = [
    		{
    			 codes: [],
    			 name: 'Primary Contact',
    			 actions: ['UDL', 'CSC', 'MLI', 'MBI', 'BSR']
    		 },
    		 {
    			 codes: ['LNS'],
    			 name: 'Lender Staff (Loan Officer/Processor)',
    			 actions: ['RGC', 'UPC', 'TRC', 'LGA', 'IDA', 'CSC', 'UDL', 'MLI', 'MBI', 'BSR']
    		 },
    		 {
    			 codes: ['LNU'],
    			 name: 'Underwriter',
    			 actions: ['UPC', 'TRC', 'LGA', 'RVF', 'IDA', 'UDL']
    		 },
    		 {
    			 codes: [],
    			 name: 'Post-Closer',
    			 actions: ['UDL']
    		 },
    		 {
    			 codes: ['ONC', 'HONP01'],
    			 name: 'OLG Administrator (Coordinator)',
    			 actions: ['RGC', 'UPC', 'TRC', 'LGA', 'RVF', 'IDA', 'UDL', 'ALP', 'RLP', 
   	                    'ILC', 'CSC', 'CMC', 'CNC', 'PAA', 'ATE', 'SUA', 'BUM', 'MML', 'LNP',
	                    'UDL', 'RDL', 'GRD', 'MLI', 'MBI', 'BSR', 'DAR', 'CDD', 'SED', 'CAD',
	                    'OCN', 'CAS', 'AHR']
    		 },
    		 {
    			 codes: ['ONA', 'HONP00'],
    			 name: 'OLG Lender Administrator',
    			 actions: ['UDL', 'RDL', 'GRD', 'MLI', 'MBI', 'BSR', 'CAD', 'OCN', 'CAS', 'AHR']
    		 },
    		 {
    			 codes: ['ONE', 'HONP02'],
    			 name: 'OLG Endorser',
    			 actions: ['UPC', 'TRC', 'LGA', 'IDA', 'ILC', 'CSC', 'CMC', 'DAR', 'CDD', 'SED',
        	               'CAD', 'OCN', 'CAS', 'AHR'
        	               ]
    		 },
    		 {
    			 codes: ['ONS', 'HONP04'],
    			 name: 'OLG Supervisor',
    			 actions: ['UPC', 'ALP', 'RLP', 'ILC', 'CSC', 'CMC', 'CNC', 'PAA', 'ATE', 'SUA', 'BUM', 'MML',
    	                 'LNP', 'RDL', 'GRD', 'DAR', 'CDD', 'SED', 'CAD', 'OCN', 'CAS', 'AHR'
    	                 ]
    		 },
    		 {
    			 codes: ['ONM', 'HONP03'],
    			 name: 'OLG Director',
    			 actions: ['ALP', 'ILC', 'PAA', 'ATE', 'MML', 'GRD', 'DAR', 'CDD', 'SED', 'CAD', 'OCN', 'CAS']
    		 },
    		 {
    			 codes: [],
    			 name: 'Auditer',
    			 actions: []
    		 },
    		 {
    			 codes: [],
    			 name: 'OLG Servicer (Future)',
    			 actions: []
    		 },
    		 {
    			 codes: [],
    			 name: 'OLG Claims Representative (Future)',
    			 actions: []
    		 }
    ];
  
	  angular
	    .module('app')
	    .constant('Constants', {
	        API_BASE: serverUrl,
	        API_ENDPOINTS: apiEndpoints,
	        ERROR_MESSAGES: ERROR_MESSAGES,
	        SUCCESS_MESSAGES: SUCCESS_MESSAGES,
	        INFO_MESSAGES: INFO_MESSAGES,
	        REFERENCE_CODES: REFERENCE_CODES,
	        contextPath : serverUrl,
	        SETTINGS: settings,
	        ROLES: roles,
	        PATTERN_EMAIL: '^[a-zA-Z0-9]+(\.[_a-zA-Z0-9]+)*@[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*(\.[a-zA-Z]{2,15})$',
	        SERVER_URL: serverUrl
	    });
  
})();
